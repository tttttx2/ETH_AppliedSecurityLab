version: "3.9"

services:
  reverse_proxy:
    ports:
      - 80:80
      - 443:443
    build: ./reverse_proxy
    networks:
        int_net:
            ipv4_address: 10.0.0.5

  core:
    build: ./core
    ports:
      - 10100:443
    environment:
        SERVICE_NAME: "core"
        CA_CERT_PASSWD: "ohpe3yoo3Oap5dohsahya1eeBieweehohseitaet"
        JWT_SECRET: "Ohtheisoashuxoolae6oocaiseepeTheiweeGhahFe8eith8eoqu0quu8cue"
        BACKUP_PASSWD: "paikoothenahKoodohfaizu9Yei0XaiN7zeiM5ga"
        MYSQL_USER: "root2"
        MYSQL_PASS: "chiMi8axaitheivoo3oh"
        REQUESTS_CA_BUNDLE: "/etc/ssl/certs/ca-certificates.crt"
    networks:
        int_net:
            ipv4_address: 10.0.0.10
    volumes:
      - ./core/data:/data

  web:
    build: ./web
    ports:
      - 10200:443
    networks:
        int_net:
            ipv4_address: 10.0.0.20
  mysql:
    build: ./mysql
    ports:
      - 10300:3306
    networks:
        int_net:
            ipv4_address: 10.0.0.30            
#  mysql:
#    image: mariadb:latest
#    environment:
#        MYSQL_ROOT_PASSWORD: 'No9fohe6aejo9Ohfof6d'
#        MYSQL_USER: 'root2'
#        MYSQL_PASSWORD: 'chiMi8axaitheivoo3oh'
#        MYSQL_DATABASE: 'db'
#    volumes:
#        - ./mysql/dump:/docker-entrypoint-initdb.d
#    networks:
#        int_net:
#            ipv4_address: 10.0.0.30
            
  logging_store:
    build: ./logging_store
    ports:
      - 10400:443
    networks:
        int_net:
            ipv4_address: 10.0.0.40    
            
  logging_view:
    build: ./logging_view
    ports:
      - 10410:443
    networks:
        int_net:
            ipv4_address: 10.0.0.41
  backup:
    build: ./backup
    ports:
      - 10500:443
    volumes:
      - ./backup/data:/data
    networks:
        int_net:
            ipv4_address: 10.0.0.50    

      
      
networks:
    int_net:
        ipam:
            driver: default
            config:
                - subnet: 10.0.0.0/24
