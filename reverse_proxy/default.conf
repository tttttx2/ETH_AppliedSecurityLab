error_log /var/log/nginx/nostd.error.log error;
access_log /var/log/nginx/nostd.access.log;

server {
    listen 443 ssl http2;
    server_name client.imovies.ch;

    # Path for SSL config/key/certificate
    ssl_certificate /etc/ssl/certs/nginx/fullchain.pem;
    ssl_certificate_key /etc/ssl/certs/nginx/privkey.pem;

    location / {
        include /etc/nginx/includes/proxy.conf;
        proxy_pass https://10.0.0.20;
        proxy_ssl_verify on;
        proxy_ssl_trusted_certificate /usr/local/share/ca-certificates/imovies_internal.crt;
    }
}

server {
    listen 443 ssl http2;
    server_name logs.imovies.ch;

    # Path for SSL config/key/certificate
    ssl_certificate /etc/ssl/certs/nginx/fullchain.pem;
    ssl_certificate_key /etc/ssl/certs/nginx/privkey.pem;


    location / {
        include /etc/nginx/includes/proxy.conf;
        proxy_pass https://10.0.0.41;
        proxy_ssl_verify on;
        proxy_ssl_trusted_certificate /usr/local/share/ca-certificates/imovies_internal.crt;
    }
}

server {
    listen 443 ssl http2;
    server_name crl.imovies.ch;

    # Path for SSL config/key/certificate
    ssl_certificate /etc/ssl/certs/nginx/fullchain.pem;
    ssl_certificate_key /etc/ssl/certs/nginx/privkey.pem;

    location / {
        include /etc/nginx/includes/proxy.conf;
        proxy_pass https://10.0.0.20/crl;
        proxy_ssl_verify on;
        proxy_ssl_trusted_certificate /usr/local/share/ca-certificates/imovies_internal.crt;
    }

}


server {
    listen 443 ssl http2;
    server_name imovies.ch www.imovies.ch;

    # Path for SSL config/key/certificate
    ssl_certificate /etc/ssl/certs/nginx/fullchain.pem;
    ssl_certificate_key /etc/ssl/certs/nginx/privkey.pem;

    root /var/www/html;
    charset UTF-8;

    location = / {
    }
}

# Default
server {
    listen 443 ssl http2 default_server;
    server_name _;

    # Path for SSL config/key/certificate
    ssl_certificate /etc/ssl/certs/nginx/fullchain.pem;
    ssl_certificate_key /etc/ssl/certs/nginx/privkey.pem;

    root /var/www/html;

    charset UTF-8;

    error_page 404 /backend-not-found.html;
    location = /backend-not-found.html {
        allow all;
    }
    location / {
        return 404;
    }
}

server {
    listen 80 default_server;

    server_name _;

    return 302 https://$host$request_uri;
}
